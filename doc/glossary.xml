<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
]>

<!-- Do not edit this file directly. Edit glossary.md and re-generate this file using pandoc. -->

<chapter id="igraph-Glossary">
  <title>Glossary</title>
  <para>
    This glossary defines common terms used throughout the igraph
    documentation.
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <emphasis role="strong">attribute</emphasis>: A piece of data
        associated with a vertex, an edge, or the graph itself. The
        igraph C library currently supports numeric, string and Boolean
        attribute values, and provides a means for implementing
        attribute handlers that support custom types.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">adjacent</emphasis>: Two vertices are
        called <emphasis role="strong">adjacent</emphasis> if there is
        an edge connecting them. This term describes a vertex-to-vertex
        relation.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">adjacency list</emphasis>: A data
        structure that associates a list of neighbours (i.e. adjacent
        vertices) to each vertex.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">adjacency matrix</emphasis>: A
        representation of a graph as a square matrix.
        <literal>A_ij</literal> gives the number of edge endpoints
        connecting from the <literal>i</literal>th vertex to the
        <literal>j</literal>th vertex. Conventionally, the diagonal of
        the adjacency matrix of an undirected graph contains
        <emphasis>twice</emphasis> the number of self-loops. All igraph
        functions follow this convention unless noted otherwise.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">biadjacency matrix</emphasis>: Analogous
        to the adjacency matrix, but used for bipartite graphs. Element
        <literal>B_ij</literal> gives the number of edges from the
        <literal>i</literal>th vertex of the first group to the
        <literal>j</literal>th vertex of the second group.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">bipartite graph</emphasis>: A graph
        whose vertices can be partitioned into two groups in such a way
        that connections are present only between members of different
        groups.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">complete graph</emphasis>: Also called
        <emphasis role="strong">full graph</emphasis> within the context
        of igraph, a graph in which all pairs of vertices are connected
        to each other.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">connected graph</emphasis>: A connected
        graph consists of a single component, in which any vertex is
        reachable from any other. In igraph, the null graph is not
        considered connected, as it has not one, but zero components.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">edge</emphasis>: A
        <emphasis role="strong">connection</emphasis> between two
        vertices, also called a <emphasis role="strong">link</emphasis>.
        In igraph, edges are referred to by integer indices called
        <emphasis role="strong">edge IDs</emphasis>.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">finalizer stack</emphasis>: A global
        stack used internally by igraph to keep track of currently
        allocated objects and their destructors, so that they can be
        automatically destroyed in case of an error.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">game</emphasis>: Within igraph, this
        term is used for stochastic graph generators, i.e. functions
        that sample from random graph models.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">graph</emphasis> or
        <emphasis role="strong">network</emphasis>: A set of vertices
        with connections between them. In igraph, graphs may carry
        associated data in the form of vertex, edge or graph attributes.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">incident</emphasis>: An edge is called
        <emphasis role="strong">incident</emphasis> to the vertices that
        are its endpoints. This term describes a vertex-to-edge
        relation.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">incidence list</emphasis>: A data
        structure that associates a list of incident edges to each
        vertex.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">incidence matrix</emphasis>: A matrix
        describing the incidence relation between vertices (rows) and
        edges (columns).
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">membership vector</emphasis>: Membership
        vectors are a means of encoding a partitioning of items, usually
        vertices, into several groups. The <literal>i</literal>th
        element of the vector gives an integer identifier of the group
        the <literal>i</literal>th vertex belongs to. Membership vectors
        are typically used to describe a vertex clustering obtained
        through community detection, or by identifying the connected
        components of a graph.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">multi-edges</emphasis> or
        <emphasis role="strong">parallel edges</emphasis>: More than one
        edge connecting the same two vertices. In a directed graph,
        <literal>a -&gt; b, a -&gt; b</literal> are considered parallel
        edges, but <literal>a -&gt; b, a &lt;- b</literal> are not.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">null graph</emphasis>: A graph with no
        vertices (and no edges).
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">self-loop</emphasis>,
        <emphasis role="strong">self-edge</emphasis>, or simply
        <emphasis role="strong">loop</emphasis>: An edge that connects a
        vertex to itself.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">simple graph</emphasis>: A graph that
        does not have self-loops or multi-edges.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">singleton graph</emphasis>: A graph
        having a single vertex. This term usually refers to a single
        vertex with no edges, but note that self-loops may in principle
        be present.
      </para>
    </listitem>
    <listitem>
      <para>
        <emphasis role="strong">vertex</emphasis>: Graphs consist of
        vertices, also called <emphasis role="strong">nodes</emphasis>,
        that are connected to each other. In igraph, vertices are
        referred to by integer indices called
        <emphasis role="strong">vertex IDs</emphasis>.
      </para>
    </listitem>
  </itemizedlist>
</chapter>
