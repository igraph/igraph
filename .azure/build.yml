parameters:
  - name: int_blas
    type: boolean
    default: true
  - name: int_lapack
    type: boolean
    default: true
  - name: int_arpack
    type: boolean
    default: true
  - name: int_gmp
    type: boolean
    default: true
  - name: int_glpk
    type: boolean
    default: true
  - name: verify_finally
    type: boolean
    default: true
  - name: build_shared
    type: boolean
    default: false
  - name: enable_tls
    type: boolean
    default: true
  - name: build_type
    type: string
    default: 'Release'
  - name: extra_cmake_args
    type: string
    default: ''
  - name: extra_ctest_args
    type: string
    default: ''
  - name: use_ccache
    type: boolean
    default: true
  - name: print_arith_header
    type: boolean
    default: true
  - name: force_colored_output
    type: boolean
    default: true

steps:
  - task: CMake@1
    displayName: CMake
    inputs:
      cmakeArgs: >
        ..
        -DIGRAPH_USE_INTERNAL_BLAS=${{ parameters.int_blas }}
        -DIGRAPH_USE_INTERNAL_LAPACK=${{ parameters.int_lapack }}
        -DIGRAPH_USE_INTERNAL_ARPACK=${{ parameters.int_arpack }}
        -DIGRAPH_USE_INTERNAL_GLPK=${{ parameters.int_glpk }}
        -DIGRAPH_USE_INTERNAL_GMP=${{ parameters.int_gmp }}
        -DIGRAPH_VERIFY_FINALLY_STACK=${{ parameters.verify_finally }}
        -DBUILD_SHARED_LIBS=${{ parameters.build_shared }}
        -DIGRAPH_ENABLE_TLS=${{ parameters.enable_tls }}
        -DUSE_CCACHE=${{ parameters.use_ccache }}
        -DCMAKE_BUILD_TYPE=${{ parameters.build_type }}
        -DIGRAPH_PRINT_ARITH_HEADER=${{ parameters.print_arith_header }}
        -DFORCE_COLORED_OUTPUT=${{ parameters.force_colored_output }}
        -DFLEX_KEEP_LINE_NUMBERS=ON
        ${{ parameters.extra_cmake_args }}

  - task: Cache@2
    condition: eq('${{ parameters.use_ccache }}', true)
    inputs:
      key: 'ccache | "$(Agent.OS)" | "$(Agent.JobName)" | "$(Build.SourceBranch)" | "$(Build.SourceVersion)"'
      restoreKeys: |
        ccache | "$(Agent.OS)" | "$(Agent.JobName)" | "$(Build.SourceBranch)"
      path: $(CCACHE_DIR)
    displayName: Ccache

  - task: CMake@1
    displayName: Build
    inputs:
      cmakeArgs: '--build . --target build_tests --target build_benchmarks'

  # TODO: use -j `nproc` on Linux , -j `sysctl -n hw.ncpu` on Darwin
  - script: cd build && ctest -j 4 --output-on-failure ${{ parameters.extra_ctest_args }} --timeout 60
    displayName: Test

  - script: ccache -s
    displayName: Ccache statistics
