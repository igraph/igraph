<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="437.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="437.00"> </text><svg id="frames" x="10" width="1180"><g><title>0xFFFFFFFFFFFFFF80 (2,582 samples, 0.99%)</title><rect x="0.6060%" y="309" width="0.9891%" height="15" fill="rgb(227,0,7)"/><text x="0.8560%" y="319.50"></text></g><g><title>asm_exc_page_fault [linux] (2,606 samples, 1.00%)</title><rect x="0.6060%" y="325" width="0.9983%" height="15" fill="rgb(217,0,24)"/><text x="0.8560%" y="335.50"></text></g><g><title>0x00007FA021806930 [libc.so.6] (3,324 samples, 1.27%)</title><rect x="0.6030%" y="341" width="1.2734%" height="15" fill="rgb(221,193,54)"/><text x="0.8530%" y="351.50"></text></g><g><title>error_entry [linux] (710 samples, 0.27%)</title><rect x="1.6043%" y="325" width="0.2720%" height="15" fill="rgb(248,212,6)"/><text x="1.8543%" y="335.50"></text></g><g><title>sync_regs [linux] (623 samples, 0.24%)</title><rect x="1.6377%" y="309" width="0.2387%" height="15" fill="rgb(208,68,35)"/><text x="1.8877%" y="319.50"></text></g><g><title>memcpy_erms [linux] (549 samples, 0.21%)</title><rect x="1.6660%" y="293" width="0.2103%" height="15" fill="rgb(232,128,0)"/><text x="1.9160%" y="303.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (549 samples, 0.21%)</title><rect x="1.6660%" y="277" width="0.2103%" height="15" fill="rgb(207,160,47)"/><text x="1.9160%" y="287.50"></text></g><g><title>0x000000770000007C (3,950 samples, 1.51%)</title><rect x="0.5589%" y="357" width="1.5132%" height="15" fill="rgb(228,23,34)"/><text x="0.8089%" y="367.50"></text></g><g><title>0x00007FA021806946 [libc.so.6] (511 samples, 0.20%)</title><rect x="1.8763%" y="341" width="0.1958%" height="15" fill="rgb(218,30,26)"/><text x="2.1263%" y="351.50"></text></g><g><title>error_entry [linux] (511 samples, 0.20%)</title><rect x="1.8763%" y="325" width="0.1958%" height="15" fill="rgb(220,122,19)"/><text x="2.1263%" y="335.50"></text></g><g><title>sync_regs [linux] (511 samples, 0.20%)</title><rect x="1.8763%" y="309" width="0.1958%" height="15" fill="rgb(250,228,42)"/><text x="2.1263%" y="319.50"></text></g><g><title>memcpy_erms [linux] (511 samples, 0.20%)</title><rect x="1.8763%" y="293" width="0.1958%" height="15" fill="rgb(240,193,28)"/><text x="2.1263%" y="303.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (511 samples, 0.20%)</title><rect x="1.8763%" y="277" width="0.1958%" height="15" fill="rgb(216,20,37)"/><text x="2.1263%" y="287.50"></text></g><g><title>igraph_rng_get_integer [benchmark_igraph_degree_sequence_game] (1,425 samples, 0.55%)</title><rect x="6.2415%" y="277" width="0.5459%" height="15" fill="rgb(206,188,39)"/><text x="6.4915%" y="287.50"></text></g><g><title>igraph_i_rng_get_random_bits [benchmark_igraph_degree_sequence_game] (899 samples, 0.34%)</title><rect x="6.4430%" y="261" width="0.3444%" height="15" fill="rgb(217,207,13)"/><text x="6.6930%" y="271.50"></text></g><g><title>igraph_rng_pcg32_get [benchmark_igraph_degree_sequence_game] (411 samples, 0.16%)</title><rect x="6.6300%" y="245" width="0.1574%" height="15" fill="rgb(231,73,38)"/><text x="6.8800%" y="255.50"></text></g><g><title>RB_insert_fixup [benchmark_igraph_degree_sequence_game] (1,346 samples, 0.52%)</title><rect x="8.3914%" y="245" width="0.5156%" height="15" fill="rgb(225,20,46)"/><text x="8.6414%" y="255.50"></text></g><g><title>RB_insert [benchmark_igraph_degree_sequence_game] (2,570 samples, 0.98%)</title><rect x="7.9237%" y="261" width="0.9845%" height="15" fill="rgb(210,31,41)"/><text x="8.1737%" y="271.50"></text></g><g><title>0x00005595333BE990 [benchmark_igraph_degree_sequence_game] (271 samples, 0.10%)</title><rect x="9.2468%" y="245" width="0.1038%" height="15" fill="rgb(221,200,47)"/><text x="9.4968%" y="255.50"></text></g><g><title>0x00007FA021911C00 [libc.so.6] (798 samples, 0.31%)</title><rect x="10.0387%" y="229" width="0.3057%" height="15" fill="rgb(226,26,5)"/><text x="10.2887%" y="239.50"></text></g><g><title>0x00007FA021911C06 [libc.so.6] (1,016 samples, 0.39%)</title><rect x="10.3444%" y="229" width="0.3892%" height="15" fill="rgb(249,33,26)"/><text x="10.5944%" y="239.50"></text></g><g><title>0x00007FA021911C0D [libc.so.6] (1,288 samples, 0.49%)</title><rect x="10.7336%" y="229" width="0.4934%" height="15" fill="rgb(235,183,28)"/><text x="10.9836%" y="239.50"></text></g><g><title>0x00007FA021911C14 [libc.so.6] (878 samples, 0.34%)</title><rect x="11.2270%" y="229" width="0.3363%" height="15" fill="rgb(221,5,38)"/><text x="11.4770%" y="239.50"></text></g><g><title>0x00007FA021911C1B [libc.so.6] (605 samples, 0.23%)</title><rect x="11.5633%" y="229" width="0.2318%" height="15" fill="rgb(247,18,42)"/><text x="11.8133%" y="239.50"></text></g><g><title>0x00007FA021911C1F [libc.so.6] (685 samples, 0.26%)</title><rect x="11.7951%" y="229" width="0.2624%" height="15" fill="rgb(241,131,45)"/><text x="12.0451%" y="239.50"></text></g><g><title>0x00007FA021911C2A [libc.so.6] (489 samples, 0.19%)</title><rect x="12.0782%" y="229" width="0.1873%" height="15" fill="rgb(249,31,29)"/><text x="12.3282%" y="239.50"></text></g><g><title>0x00007FA021911C31 [libc.so.6] (523 samples, 0.20%)</title><rect x="12.2655%" y="229" width="0.2004%" height="15" fill="rgb(225,111,53)"/><text x="12.5155%" y="239.50"></text></g><g><title>0x00007FA021911C38 [libc.so.6] (316 samples, 0.12%)</title><rect x="12.4659%" y="229" width="0.1211%" height="15" fill="rgb(238,160,17)"/><text x="12.7159%" y="239.50"></text></g><g><title>0x00007FA021911C3F [libc.so.6] (475 samples, 0.18%)</title><rect x="12.5869%" y="229" width="0.1820%" height="15" fill="rgb(214,148,48)"/><text x="12.8369%" y="239.50"></text></g><g><title>0x00007FA021805A30 [libc.so.6] (278 samples, 0.11%)</title><rect x="13.9695%" y="213" width="0.1065%" height="15" fill="rgb(232,36,49)"/><text x="14.2195%" y="223.50"></text></g><g><title>0x00007FA021805AA8 [libc.so.6] (699 samples, 0.27%)</title><rect x="14.4177%" y="213" width="0.2678%" height="15" fill="rgb(209,103,24)"/><text x="14.6677%" y="223.50"></text></g><g><title>0x00007FA021805E73 [libc.so.6] (306 samples, 0.12%)</title><rect x="15.0156%" y="213" width="0.1172%" height="15" fill="rgb(229,88,8)"/><text x="15.2656%" y="223.50"></text></g><g><title>0x00007FA021805E86 [libc.so.6] (425 samples, 0.16%)</title><rect x="15.1719%" y="213" width="0.1628%" height="15" fill="rgb(213,181,19)"/><text x="15.4219%" y="223.50"></text></g><g><title>0x00007FA021805E9D [libc.so.6] (287 samples, 0.11%)</title><rect x="15.3895%" y="213" width="0.1099%" height="15" fill="rgb(254,191,54)"/><text x="15.6395%" y="223.50"></text></g><g><title>0x00007FA021805EE2 [libc.so.6] (423 samples, 0.16%)</title><rect x="15.7186%" y="213" width="0.1620%" height="15" fill="rgb(241,83,37)"/><text x="15.9686%" y="223.50"></text></g><g><title>0x00007FA021805F96 [libc.so.6] (3,464 samples, 1.33%)</title><rect x="16.5300%" y="213" width="1.3270%" height="15" fill="rgb(233,36,39)"/><text x="16.7800%" y="223.50"></text></g><g><title>0x00007FA021805FC7 [libc.so.6] (1,012 samples, 0.39%)</title><rect x="18.0573%" y="213" width="0.3877%" height="15" fill="rgb(226,3,54)"/><text x="18.3073%" y="223.50"></text></g><g><title>0x00007FA02180601B [libc.so.6] (437 samples, 0.17%)</title><rect x="18.6423%" y="213" width="0.1674%" height="15" fill="rgb(245,192,40)"/><text x="18.8923%" y="223.50"></text></g><g><title>0x00007FA021806047 [libc.so.6] (589 samples, 0.23%)</title><rect x="19.1181%" y="213" width="0.2256%" height="15" fill="rgb(238,167,29)"/><text x="19.3681%" y="223.50"></text></g><g><title>0x00007FA021806053 [libc.so.6] (659 samples, 0.25%)</title><rect x="19.4525%" y="213" width="0.2525%" height="15" fill="rgb(232,182,51)"/><text x="19.7025%" y="223.50"></text></g><g><title>0x00007FA021806250 [libc.so.6] (569 samples, 0.22%)</title><rect x="19.9697%" y="213" width="0.2180%" height="15" fill="rgb(231,60,39)"/><text x="20.2197%" y="223.50"></text></g><g><title>0x00007FA021806318 [libc.so.6] (292 samples, 0.11%)</title><rect x="20.5780%" y="213" width="0.1119%" height="15" fill="rgb(208,69,12)"/><text x="20.8280%" y="223.50"></text></g><g><title>0x00007FA021806682 [libc.so.6] (2,068 samples, 0.79%)</title><rect x="21.1859%" y="213" width="0.7922%" height="15" fill="rgb(235,93,37)"/><text x="21.4359%" y="223.50"></text></g><g><title>0x00007FA021803790 [libc.so.6] (395 samples, 0.15%)</title><rect x="22.1674%" y="197" width="0.1513%" height="15" fill="rgb(213,116,39)"/><text x="22.4174%" y="207.50"></text></g><g><title>0x00007FA0218037A9 [libc.so.6] (11,511 samples, 4.41%)</title><rect x="22.4018%" y="197" width="4.4097%" height="15" fill="rgb(222,207,29)"/><text x="22.6518%" y="207.50">0x000..</text></g><g><title>0x00007FA0218037CF [libc.so.6] (4,937 samples, 1.89%)</title><rect x="26.8693%" y="197" width="1.8913%" height="15" fill="rgb(206,96,30)"/><text x="27.1193%" y="207.50">0..</text></g><g><title>0x00007FA0218066AA [libc.so.6] (17,623 samples, 6.75%)</title><rect x="22.1674%" y="213" width="6.7510%" height="15" fill="rgb(218,138,4)"/><text x="22.4174%" y="223.50">0x00007FA..</text></g><g><title>0xFFFFFFFFFFFFFF80 (283 samples, 0.11%)</title><rect x="29.6888%" y="117" width="0.1084%" height="15" fill="rgb(250,191,14)"/><text x="29.9388%" y="127.50"></text></g><g><title>__list_del_entry_valid [linux] (553 samples, 0.21%)</title><rect x="29.8650%" y="85" width="0.2118%" height="15" fill="rgb(239,60,40)"/><text x="30.1150%" y="95.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (553 samples, 0.21%)</title><rect x="29.8650%" y="69" width="0.2118%" height="15" fill="rgb(206,27,48)"/><text x="30.1150%" y="79.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (445 samples, 0.17%)</title><rect x="30.0914%" y="37" width="0.1705%" height="15" fill="rgb(225,35,8)"/><text x="30.3414%" y="47.50"></text></g><g><title>prep_new_page [linux] (483 samples, 0.19%)</title><rect x="30.0773%" y="85" width="0.1850%" height="15" fill="rgb(250,213,24)"/><text x="30.3273%" y="95.50"></text></g><g><title>kernel_init_free_pages.part.0 [linux] (466 samples, 0.18%)</title><rect x="30.0838%" y="69" width="0.1785%" height="15" fill="rgb(247,123,22)"/><text x="30.3338%" y="79.50"></text></g><g><title>clear_page_erms [linux] (446 samples, 0.17%)</title><rect x="30.0914%" y="53" width="0.1709%" height="15" fill="rgb(231,138,38)"/><text x="30.3414%" y="63.50"></text></g><g><title>get_page_from_freelist [linux] (1,230 samples, 0.47%)</title><rect x="29.8126%" y="101" width="0.4712%" height="15" fill="rgb(231,145,46)"/><text x="30.0626%" y="111.50"></text></g><g><title>__alloc_pages [linux] (1,272 samples, 0.49%)</title><rect x="29.7972%" y="117" width="0.4873%" height="15" fill="rgb(251,118,11)"/><text x="30.0472%" y="127.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 [linux] (479 samples, 0.18%)</title><rect x="30.4086%" y="85" width="0.1835%" height="15" fill="rgb(217,147,25)"/><text x="30.6586%" y="95.50"></text></g><g><title>__count_memcg_events [linux] (334 samples, 0.13%)</title><rect x="30.4642%" y="69" width="0.1279%" height="15" fill="rgb(247,81,37)"/><text x="30.7142%" y="79.50"></text></g><g><title>charge_memcg [linux] (678 samples, 0.26%)</title><rect x="30.3516%" y="101" width="0.2597%" height="15" fill="rgb(209,12,38)"/><text x="30.6016%" y="111.50"></text></g><g><title>__mem_cgroup_charge [linux] (860 samples, 0.33%)</title><rect x="30.3278%" y="117" width="0.3295%" height="15" fill="rgb(227,1,9)"/><text x="30.5778%" y="127.50"></text></g><g><title>_raw_spin_lock [linux] (816 samples, 0.31%)</title><rect x="30.6837%" y="117" width="0.3126%" height="15" fill="rgb(248,47,43)"/><text x="30.9337%" y="127.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (816 samples, 0.31%)</title><rect x="30.6837%" y="101" width="0.3126%" height="15" fill="rgb(221,10,30)"/><text x="30.9337%" y="111.50"></text></g><g><title>__pagevec_lru_add [linux] (460 samples, 0.18%)</title><rect x="31.0128%" y="101" width="0.1762%" height="15" fill="rgb(210,229,1)"/><text x="31.2628%" y="111.50"></text></g><g><title>lru_cache_add [linux] (506 samples, 0.19%)</title><rect x="30.9978%" y="117" width="0.1938%" height="15" fill="rgb(222,148,37)"/><text x="31.2478%" y="127.50"></text></g><g><title>__handle_mm_fault [linux] (3,975 samples, 1.52%)</title><rect x="29.6888%" y="133" width="1.5227%" height="15" fill="rgb(234,67,33)"/><text x="29.9388%" y="143.50"></text></g><g><title>handle_mm_fault [linux] (4,119 samples, 1.58%)</title><rect x="29.6371%" y="149" width="1.5779%" height="15" fill="rgb(247,98,35)"/><text x="29.8871%" y="159.50"></text></g><g><title>do_user_addr_fault [linux] (4,303 samples, 1.65%)</title><rect x="29.5819%" y="165" width="1.6484%" height="15" fill="rgb(247,138,52)"/><text x="29.8319%" y="175.50"></text></g><g><title>exc_page_fault [linux] (4,339 samples, 1.66%)</title><rect x="29.5693%" y="181" width="1.6622%" height="15" fill="rgb(213,79,30)"/><text x="29.8193%" y="191.50"></text></g><g><title>asm_exc_page_fault [linux] (4,359 samples, 1.67%)</title><rect x="29.5682%" y="197" width="1.6699%" height="15" fill="rgb(246,177,23)"/><text x="29.8182%" y="207.50"></text></g><g><title>error_entry [linux] (306 samples, 0.12%)</title><rect x="31.2384%" y="197" width="0.1172%" height="15" fill="rgb(230,62,27)"/><text x="31.4884%" y="207.50"></text></g><g><title>sync_regs [linux] (302 samples, 0.12%)</title><rect x="31.2399%" y="181" width="0.1157%" height="15" fill="rgb(216,154,8)"/><text x="31.4899%" y="191.50"></text></g><g><title>memcpy_erms [linux] (296 samples, 0.11%)</title><rect x="31.2422%" y="165" width="0.1134%" height="15" fill="rgb(244,35,45)"/><text x="31.4922%" y="175.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (296 samples, 0.11%)</title><rect x="31.2422%" y="149" width="0.1134%" height="15" fill="rgb(251,115,12)"/><text x="31.4922%" y="159.50"></text></g><g><title>0x00007FA021806930 [libc.so.6] (5,349 samples, 2.05%)</title><rect x="29.3077%" y="213" width="2.0491%" height="15" fill="rgb(240,54,50)"/><text x="29.5577%" y="223.50">0..</text></g><g><title>0x00007FA021806934 [libc.so.6] (314 samples, 0.12%)</title><rect x="31.3568%" y="213" width="0.1203%" height="15" fill="rgb(233,84,52)"/><text x="31.6068%" y="223.50"></text></g><g><title>0x00007FA02180695C [libc.so.6] (429 samples, 0.16%)</title><rect x="31.4770%" y="213" width="0.1643%" height="15" fill="rgb(207,117,47)"/><text x="31.7270%" y="223.50"></text></g><g><title>igraph_set_init [benchmark_igraph_degree_sequence_game] (58,188 samples, 22.29%)</title><rect x="9.3537%" y="245" width="22.2908%" height="15" fill="rgb(249,43,39)"/><text x="9.6037%" y="255.50">igraph_set_init [benchmark_igraph_d..</text></g><g><title>__libc_calloc [libc.so.6] (49,273 samples, 18.88%)</title><rect x="12.7689%" y="229" width="18.8756%" height="15" fill="rgb(209,38,44)"/><text x="13.0189%" y="239.50">__libc_calloc [libc.so.6]</text></g><g><title>0x00007FA021806B30 [libc.so.6] (317 samples, 0.12%)</title><rect x="32.8711%" y="229" width="0.1214%" height="15" fill="rgb(236,212,23)"/><text x="33.1211%" y="239.50"></text></g><g><title>0x00007FA021806BF8 [libc.so.6] (1,849 samples, 0.71%)</title><rect x="33.6947%" y="229" width="0.7083%" height="15" fill="rgb(242,79,21)"/><text x="33.9447%" y="239.50"></text></g><g><title>0x00007FA021805A30 [libc.so.6] (277 samples, 0.11%)</title><rect x="34.4724%" y="213" width="0.1061%" height="15" fill="rgb(211,96,35)"/><text x="34.7224%" y="223.50"></text></g><g><title>0x00007FA021805A39 [libc.so.6] (2,580 samples, 0.99%)</title><rect x="34.5815%" y="213" width="0.9884%" height="15" fill="rgb(253,215,40)"/><text x="34.8315%" y="223.50"></text></g><g><title>0x00007FA021805A3F [libc.so.6] (722 samples, 0.28%)</title><rect x="35.6040%" y="213" width="0.2766%" height="15" fill="rgb(211,81,21)"/><text x="35.8540%" y="223.50"></text></g><g><title>0x00007FA021805A41 [libc.so.6] (1,277 samples, 0.49%)</title><rect x="35.8806%" y="213" width="0.4892%" height="15" fill="rgb(208,190,38)"/><text x="36.1306%" y="223.50"></text></g><g><title>0x00007FA021805A43 [libc.so.6] (729 samples, 0.28%)</title><rect x="36.3698%" y="213" width="0.2793%" height="15" fill="rgb(235,213,38)"/><text x="36.6198%" y="223.50"></text></g><g><title>0x00007FA021805A45 [libc.so.6] (433 samples, 0.17%)</title><rect x="36.6490%" y="213" width="0.1659%" height="15" fill="rgb(237,122,38)"/><text x="36.8990%" y="223.50"></text></g><g><title>0x00007FA021805C05 [libc.so.6] (272 samples, 0.10%)</title><rect x="37.7029%" y="213" width="0.1042%" height="15" fill="rgb(244,218,35)"/><text x="37.9529%" y="223.50"></text></g><g><title>0x00007FA021805C15 [libc.so.6] (342 samples, 0.13%)</title><rect x="37.8841%" y="213" width="0.1310%" height="15" fill="rgb(240,68,47)"/><text x="38.1341%" y="223.50"></text></g><g><title>0x00007FA021805EE2 [libc.so.6] (445 samples, 0.17%)</title><rect x="38.5656%" y="213" width="0.1705%" height="15" fill="rgb(210,16,53)"/><text x="38.8156%" y="223.50"></text></g><g><title>0x00007FA021805F00 [libc.so.6] (295 samples, 0.11%)</title><rect x="39.0107%" y="213" width="0.1130%" height="15" fill="rgb(235,124,12)"/><text x="39.2607%" y="223.50"></text></g><g><title>0x00007FA021805F36 [libc.so.6] (382 samples, 0.15%)</title><rect x="39.3103%" y="213" width="0.1463%" height="15" fill="rgb(224,169,11)"/><text x="39.5603%" y="223.50"></text></g><g><title>0x00007FA021805F96 [libc.so.6] (1,003 samples, 0.38%)</title><rect x="40.1106%" y="213" width="0.3842%" height="15" fill="rgb(250,166,2)"/><text x="40.3606%" y="223.50"></text></g><g><title>0x00007FA021805FC7 [libc.so.6] (294 samples, 0.11%)</title><rect x="40.7204%" y="213" width="0.1126%" height="15" fill="rgb(242,216,29)"/><text x="40.9704%" y="223.50"></text></g><g><title>0x00007FA021805FDA [libc.so.6] (1,377 samples, 0.53%)</title><rect x="40.8511%" y="213" width="0.5275%" height="15" fill="rgb(230,116,27)"/><text x="41.1011%" y="223.50"></text></g><g><title>0x00007FA021805FEC [libc.so.6] (2,249 samples, 0.86%)</title><rect x="41.4046%" y="213" width="0.8616%" height="15" fill="rgb(228,99,48)"/><text x="41.6546%" y="223.50"></text></g><g><title>0x00007FA021805FF0 [libc.so.6] (1,818 samples, 0.70%)</title><rect x="42.2662%" y="213" width="0.6964%" height="15" fill="rgb(253,11,6)"/><text x="42.5162%" y="223.50"></text></g><g><title>0x00007FA02180601F [libc.so.6] (1,067 samples, 0.41%)</title><rect x="43.1024%" y="213" width="0.4087%" height="15" fill="rgb(247,143,39)"/><text x="43.3524%" y="223.50"></text></g><g><title>0x00007FA02180603C [libc.so.6] (372 samples, 0.14%)</title><rect x="43.6384%" y="213" width="0.1425%" height="15" fill="rgb(236,97,10)"/><text x="43.8884%" y="223.50"></text></g><g><title>0x00007FA021806047 [libc.so.6] (1,523 samples, 0.58%)</title><rect x="43.8253%" y="213" width="0.5834%" height="15" fill="rgb(233,208,19)"/><text x="44.0753%" y="223.50"></text></g><g><title>0x00007FA02180604F [libc.so.6] (1,279 samples, 0.49%)</title><rect x="44.4662%" y="213" width="0.4900%" height="15" fill="rgb(216,164,2)"/><text x="44.7162%" y="223.50"></text></g><g><title>0x00007FA021806053 [libc.so.6] (696 samples, 0.27%)</title><rect x="44.9562%" y="213" width="0.2666%" height="15" fill="rgb(220,129,5)"/><text x="45.2062%" y="223.50"></text></g><g><title>0x00007FA021806057 [libc.so.6] (308 samples, 0.12%)</title><rect x="45.2228%" y="213" width="0.1180%" height="15" fill="rgb(242,17,10)"/><text x="45.4728%" y="223.50"></text></g><g><title>0x00007FA02180622F [libc.so.6] (512 samples, 0.20%)</title><rect x="45.6246%" y="213" width="0.1961%" height="15" fill="rgb(242,107,0)"/><text x="45.8746%" y="223.50"></text></g><g><title>0x00007FA021806250 [libc.so.6] (1,103 samples, 0.42%)</title><rect x="45.9905%" y="213" width="0.4225%" height="15" fill="rgb(251,28,31)"/><text x="46.2405%" y="223.50"></text></g><g><title>0x00007FA021806318 [libc.so.6] (1,042 samples, 0.40%)</title><rect x="46.7655%" y="213" width="0.3992%" height="15" fill="rgb(233,223,10)"/><text x="47.0155%" y="223.50"></text></g><g><title>0x00007FA021806324 [libc.so.6] (477 samples, 0.18%)</title><rect x="47.2447%" y="213" width="0.1827%" height="15" fill="rgb(215,21,27)"/><text x="47.4947%" y="223.50"></text></g><g><title>0x00007FA021806400 [libc.so.6] (861 samples, 0.33%)</title><rect x="47.6163%" y="213" width="0.3298%" height="15" fill="rgb(232,23,21)"/><text x="47.8663%" y="223.50"></text></g><g><title>0x00007FA021806620 [libc.so.6] (421 samples, 0.16%)</title><rect x="48.2116%" y="213" width="0.1613%" height="15" fill="rgb(244,5,23)"/><text x="48.4616%" y="223.50"></text></g><g><title>0x00007FA02180665F [libc.so.6] (554 samples, 0.21%)</title><rect x="48.5142%" y="213" width="0.2122%" height="15" fill="rgb(226,81,46)"/><text x="48.7642%" y="223.50"></text></g><g><title>0x00007FA021806682 [libc.so.6] (1,165 samples, 0.45%)</title><rect x="48.8264%" y="213" width="0.4463%" height="15" fill="rgb(247,70,30)"/><text x="49.0764%" y="223.50"></text></g><g><title>0x00007FA0218037A9 [libc.so.6] (12,654 samples, 4.85%)</title><rect x="49.5558%" y="197" width="4.8475%" height="15" fill="rgb(212,68,19)"/><text x="49.8058%" y="207.50">0x0000..</text></g><g><title>0x00007FA0218037CF [libc.so.6] (3,468 samples, 1.33%)</title><rect x="54.4600%" y="197" width="1.3285%" height="15" fill="rgb(240,187,13)"/><text x="54.7100%" y="207.50"></text></g><g><title>0x00007FA0218066AA [libc.so.6] (16,958 samples, 6.50%)</title><rect x="49.4214%" y="213" width="6.4963%" height="15" fill="rgb(223,113,26)"/><text x="49.6714%" y="223.50">0x00007FA..</text></g><g><title>0x00007FA0218066E2 [libc.so.6] (434 samples, 0.17%)</title><rect x="56.0222%" y="213" width="0.1663%" height="15" fill="rgb(206,192,2)"/><text x="56.2722%" y="223.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (1,438 samples, 0.55%)</title><rect x="57.3144%" y="181" width="0.5509%" height="15" fill="rgb(241,108,4)"/><text x="57.5644%" y="191.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (855 samples, 0.33%)</title><rect x="58.1866%" y="117" width="0.3275%" height="15" fill="rgb(247,173,49)"/><text x="58.4366%" y="127.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (373 samples, 0.14%)</title><rect x="58.5728%" y="85" width="0.1429%" height="15" fill="rgb(224,114,35)"/><text x="58.8228%" y="95.50"></text></g><g><title>__list_del_entry_valid [linux] (1,627 samples, 0.62%)</title><rect x="58.7157%" y="85" width="0.6233%" height="15" fill="rgb(245,159,27)"/><text x="58.9657%" y="95.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (1,627 samples, 0.62%)</title><rect x="58.7157%" y="69" width="0.6233%" height="15" fill="rgb(245,172,44)"/><text x="58.9657%" y="79.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (1,421 samples, 0.54%)</title><rect x="59.3934%" y="37" width="0.5444%" height="15" fill="rgb(236,23,11)"/><text x="59.6434%" y="47.50"></text></g><g><title>prep_new_page [linux] (1,563 samples, 0.60%)</title><rect x="59.3409%" y="85" width="0.5988%" height="15" fill="rgb(205,117,38)"/><text x="59.5909%" y="95.50"></text></g><g><title>kernel_init_free_pages.part.0 [linux] (1,490 samples, 0.57%)</title><rect x="59.3688%" y="69" width="0.5708%" height="15" fill="rgb(237,72,25)"/><text x="59.6188%" y="79.50"></text></g><g><title>clear_page_erms [linux] (1,426 samples, 0.55%)</title><rect x="59.3934%" y="53" width="0.5463%" height="15" fill="rgb(244,70,9)"/><text x="59.6434%" y="63.50"></text></g><g><title>get_page_from_freelist [linux] (3,761 samples, 1.44%)</title><rect x="58.5728%" y="101" width="1.4408%" height="15" fill="rgb(217,125,39)"/><text x="58.8228%" y="111.50"></text></g><g><title>__alloc_pages [linux] (3,922 samples, 1.50%)</title><rect x="58.5142%" y="117" width="1.5024%" height="15" fill="rgb(235,36,10)"/><text x="58.7642%" y="127.50"></text></g><g><title>__cgroup_throttle_swaprate [linux] (317 samples, 0.12%)</title><rect x="60.0166%" y="117" width="0.1214%" height="15" fill="rgb(251,123,47)"/><text x="60.2666%" y="127.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (427 samples, 0.16%)</title><rect x="60.1986%" y="85" width="0.1636%" height="15" fill="rgb(221,13,13)"/><text x="60.4486%" y="95.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (470 samples, 0.18%)</title><rect x="60.3633%" y="69" width="0.1800%" height="15" fill="rgb(238,131,9)"/><text x="60.6133%" y="79.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (590 samples, 0.23%)</title><rect x="60.5434%" y="53" width="0.2260%" height="15" fill="rgb(211,50,8)"/><text x="60.7934%" y="63.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 [linux] (1,297 samples, 0.50%)</title><rect x="60.3633%" y="85" width="0.4969%" height="15" fill="rgb(245,182,24)"/><text x="60.6133%" y="95.50"></text></g><g><title>__count_memcg_events [linux] (827 samples, 0.32%)</title><rect x="60.5434%" y="69" width="0.3168%" height="15" fill="rgb(242,14,37)"/><text x="60.7934%" y="79.50"></text></g><g><title>charge_memcg [linux] (1,873 samples, 0.72%)</title><rect x="60.1986%" y="101" width="0.7175%" height="15" fill="rgb(246,228,12)"/><text x="60.4486%" y="111.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (319 samples, 0.12%)</title><rect x="60.9161%" y="85" width="0.1222%" height="15" fill="rgb(213,55,15)"/><text x="61.1661%" y="95.50"></text></g><g><title>__mem_cgroup_charge [linux] (2,361 samples, 0.90%)</title><rect x="60.1381%" y="117" width="0.9045%" height="15" fill="rgb(209,9,3)"/><text x="60.3881%" y="127.50"></text></g><g><title>get_mem_cgroup_from_mm [linux] (330 samples, 0.13%)</title><rect x="60.9161%" y="101" width="0.1264%" height="15" fill="rgb(230,59,30)"/><text x="61.1661%" y="111.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (2,561 samples, 0.98%)</title><rect x="61.1276%" y="101" width="0.9811%" height="15" fill="rgb(209,121,21)"/><text x="61.3776%" y="111.50"></text></g><g><title>_raw_spin_lock [linux] (2,570 samples, 0.98%)</title><rect x="61.1276%" y="117" width="0.9845%" height="15" fill="rgb(220,109,13)"/><text x="61.3776%" y="127.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (560 samples, 0.21%)</title><rect x="62.1688%" y="85" width="0.2145%" height="15" fill="rgb(232,18,1)"/><text x="62.4188%" y="95.50"></text></g><g><title>__pagevec_lru_add [linux] (1,221 samples, 0.47%)</title><rect x="62.1688%" y="101" width="0.4677%" height="15" fill="rgb(215,41,42)"/><text x="62.4188%" y="111.50"></text></g><g><title>lru_cache_add [linux] (1,388 samples, 0.53%)</title><rect x="62.1159%" y="117" width="0.5317%" height="15" fill="rgb(224,123,36)"/><text x="62.3659%" y="127.50"></text></g><g><title>__handle_mm_fault [linux] (11,821 samples, 4.53%)</title><rect x="58.1866%" y="133" width="4.5284%" height="15" fill="rgb(240,125,3)"/><text x="58.4366%" y="143.50">__han..</text></g><g><title>handle_mm_fault [linux] (12,203 samples, 4.67%)</title><rect x="58.0510%" y="149" width="4.6747%" height="15" fill="rgb(205,98,50)"/><text x="58.3010%" y="159.50">handl..</text></g><g><title>do_user_addr_fault [linux] (12,745 samples, 4.88%)</title><rect x="57.8928%" y="165" width="4.8824%" height="15" fill="rgb(205,185,37)"/><text x="58.1428%" y="175.50">do_use..</text></g><g><title>exc_page_fault [linux] (12,808 samples, 4.91%)</title><rect x="57.8710%" y="181" width="4.9065%" height="15" fill="rgb(238,207,15)"/><text x="58.1210%" y="191.50">exc_pa..</text></g><g><title>asm_exc_page_fault [linux] (14,303 samples, 5.48%)</title><rect x="57.3144%" y="197" width="5.4792%" height="15" fill="rgb(213,199,42)"/><text x="57.5644%" y="207.50">asm_exc..</text></g><g><title>error_entry [linux] (1,543 samples, 0.59%)</title><rect x="62.7951%" y="197" width="0.5911%" height="15" fill="rgb(235,201,11)"/><text x="63.0451%" y="207.50"></text></g><g><title>sync_regs [linux] (1,482 samples, 0.57%)</title><rect x="62.8185%" y="181" width="0.5677%" height="15" fill="rgb(207,46,11)"/><text x="63.0685%" y="191.50"></text></g><g><title>memcpy_erms [linux] (1,435 samples, 0.55%)</title><rect x="62.8365%" y="165" width="0.5497%" height="15" fill="rgb(241,35,35)"/><text x="63.0865%" y="175.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (1,435 samples, 0.55%)</title><rect x="62.8365%" y="149" width="0.5497%" height="15" fill="rgb(243,32,47)"/><text x="63.0865%" y="159.50"></text></g><g><title>0x00007FA021806930 [libc.so.6] (18,128 samples, 6.94%)</title><rect x="56.4448%" y="213" width="6.9445%" height="15" fill="rgb(247,202,23)"/><text x="56.6948%" y="223.50">0x00007FA..</text></g><g><title>0x00007FA021806934 [libc.so.6] (899 samples, 0.34%)</title><rect x="63.3893%" y="213" width="0.3444%" height="15" fill="rgb(219,102,11)"/><text x="63.6393%" y="223.50"></text></g><g><title>__handle_mm_fault [linux] (507 samples, 0.19%)</title><rect x="63.8639%" y="117" width="0.1942%" height="15" fill="rgb(243,110,44)"/><text x="64.1139%" y="127.50"></text></g><g><title>handle_mm_fault [linux] (550 samples, 0.21%)</title><rect x="63.8497%" y="133" width="0.2107%" height="15" fill="rgb(222,74,54)"/><text x="64.0997%" y="143.50"></text></g><g><title>do_user_addr_fault [linux] (601 samples, 0.23%)</title><rect x="63.8321%" y="149" width="0.2302%" height="15" fill="rgb(216,99,12)"/><text x="64.0821%" y="159.50"></text></g><g><title>exc_page_fault [linux] (607 samples, 0.23%)</title><rect x="63.8306%" y="165" width="0.2325%" height="15" fill="rgb(226,22,26)"/><text x="64.0806%" y="175.50"></text></g><g><title>asm_exc_page_fault [linux] (681 samples, 0.26%)</title><rect x="63.8038%" y="181" width="0.2609%" height="15" fill="rgb(217,163,10)"/><text x="64.0538%" y="191.50"></text></g><g><title>0x00007FA0218052CB [libc.so.6] (848 samples, 0.32%)</title><rect x="63.7544%" y="197" width="0.3249%" height="15" fill="rgb(213,25,53)"/><text x="64.0044%" y="207.50"></text></g><g><title>perf_iterate_sb [linux] (270 samples, 0.10%)</title><rect x="64.2589%" y="53" width="0.1034%" height="15" fill="rgb(252,105,26)"/><text x="64.5089%" y="63.50"></text></g><g><title>perf_event_mmap [linux] (318 samples, 0.12%)</title><rect x="64.2428%" y="69" width="0.1218%" height="15" fill="rgb(220,39,43)"/><text x="64.4928%" y="79.50"></text></g><g><title>do_brk_flags [linux] (554 samples, 0.21%)</title><rect x="64.2125%" y="85" width="0.2122%" height="15" fill="rgb(229,68,48)"/><text x="64.4625%" y="95.50"></text></g><g><title>__x64_sys_brk [linux] (655 samples, 0.25%)</title><rect x="64.2041%" y="101" width="0.2509%" height="15" fill="rgb(252,8,32)"/><text x="64.4541%" y="111.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (681 samples, 0.26%)</title><rect x="64.1991%" y="133" width="0.2609%" height="15" fill="rgb(223,20,43)"/><text x="64.4491%" y="143.50"></text></g><g><title>do_syscall_64 [linux] (679 samples, 0.26%)</title><rect x="64.1999%" y="117" width="0.2601%" height="15" fill="rgb(229,81,49)"/><text x="64.4499%" y="127.50"></text></g><g><title>0x00007FA021805678 [libc.so.6] (959 samples, 0.37%)</title><rect x="64.0984%" y="197" width="0.3674%" height="15" fill="rgb(236,28,36)"/><text x="64.3484%" y="207.50"></text></g><g><title>__default_morecore [libc.so.6] (959 samples, 0.37%)</title><rect x="64.0984%" y="181" width="0.3674%" height="15" fill="rgb(249,185,26)"/><text x="64.3484%" y="191.50"></text></g><g><title>sbrk [libc.so.6] (957 samples, 0.37%)</title><rect x="64.0991%" y="165" width="0.3666%" height="15" fill="rgb(249,174,33)"/><text x="64.3491%" y="175.50"></text></g><g><title>brk [libc.so.6] (935 samples, 0.36%)</title><rect x="64.1076%" y="149" width="0.3582%" height="15" fill="rgb(233,201,37)"/><text x="64.3576%" y="159.50"></text></g><g><title>0x00007FA02180695C [libc.so.6] (1,911 samples, 0.73%)</title><rect x="63.7340%" y="213" width="0.7321%" height="15" fill="rgb(221,78,26)"/><text x="63.9840%" y="223.50"></text></g><g><title>0x00007FA021806C09 [libc.so.6] (78,298 samples, 29.99%)</title><rect x="34.4724%" y="229" width="29.9945%" height="15" fill="rgb(250,127,30)"/><text x="34.7224%" y="239.50">0x00007FA021806C09 [libc.so.6]</text></g><g><title>0x00007FA021911106 [libc.so.6] (295 samples, 0.11%)</title><rect x="65.2055%" y="213" width="0.1130%" height="15" fill="rgb(230,49,44)"/><text x="65.4555%" y="223.50"></text></g><g><title>0x00007FA02191111B [libc.so.6] (305 samples, 0.12%)</title><rect x="65.5027%" y="213" width="0.1168%" height="15" fill="rgb(229,67,23)"/><text x="65.7527%" y="223.50"></text></g><g><title>0x00007FA02191112C [libc.so.6] (272 samples, 0.10%)</title><rect x="65.7291%" y="213" width="0.1042%" height="15" fill="rgb(249,83,47)"/><text x="65.9791%" y="223.50"></text></g><g><title>0x00007FA02191114A [libc.so.6] (313 samples, 0.12%)</title><rect x="66.0471%" y="213" width="0.1199%" height="15" fill="rgb(215,43,3)"/><text x="66.2971%" y="223.50"></text></g><g><title>0x00007FA021911158 [libc.so.6] (332 samples, 0.13%)</title><rect x="66.2597%" y="213" width="0.1272%" height="15" fill="rgb(238,154,13)"/><text x="66.5097%" y="223.50"></text></g><g><title>0x00007FA02191115E [libc.so.6] (288 samples, 0.11%)</title><rect x="66.3869%" y="213" width="0.1103%" height="15" fill="rgb(219,56,2)"/><text x="66.6369%" y="223.50"></text></g><g><title>0x00007FA021806C4A [libc.so.6] (5,532 samples, 2.12%)</title><rect x="64.6171%" y="229" width="2.1192%" height="15" fill="rgb(233,0,4)"/><text x="64.8671%" y="239.50">0..</text></g><g><title>0x00007FA021804720 [libc.so.6] (295 samples, 0.11%)</title><rect x="66.8470%" y="213" width="0.1130%" height="15" fill="rgb(235,30,7)"/><text x="67.0970%" y="223.50"></text></g><g><title>0x00007FA0218047BF [libc.so.6] (340 samples, 0.13%)</title><rect x="67.4752%" y="213" width="0.1302%" height="15" fill="rgb(250,79,13)"/><text x="67.7252%" y="223.50"></text></g><g><title>0x00007FA021804964 [libc.so.6] (460 samples, 0.18%)</title><rect x="68.1330%" y="213" width="0.1762%" height="15" fill="rgb(211,146,34)"/><text x="68.3830%" y="223.50"></text></g><g><title>0x00007FA021804DAA [libc.so.6] (985 samples, 0.38%)</title><rect x="68.7409%" y="213" width="0.3773%" height="15" fill="rgb(228,22,38)"/><text x="68.9909%" y="223.50"></text></g><g><title>0x00007FA021806C5A [libc.so.6] (6,133 samples, 2.35%)</title><rect x="66.8470%" y="229" width="2.3494%" height="15" fill="rgb(235,168,5)"/><text x="67.0970%" y="239.50">0..</text></g><g><title>0x00007FA02180494A [libc.so.6] (713 samples, 0.27%)</title><rect x="69.3722%" y="213" width="0.2731%" height="15" fill="rgb(221,155,16)"/><text x="69.6222%" y="223.50"></text></g><g><title>0x00007FA021806C88 [libc.so.6] (1,320 samples, 0.51%)</title><rect x="69.2305%" y="229" width="0.5057%" height="15" fill="rgb(215,215,53)"/><text x="69.4805%" y="239.50"></text></g><g><title>0x00007FA021806D30 [libc.so.6] (501 samples, 0.19%)</title><rect x="69.8710%" y="229" width="0.1919%" height="15" fill="rgb(223,4,10)"/><text x="70.1210%" y="239.50"></text></g><g><title>error_entry [linux] (501 samples, 0.19%)</title><rect x="69.8710%" y="213" width="0.1919%" height="15" fill="rgb(234,103,6)"/><text x="70.1210%" y="223.50"></text></g><g><title>sync_regs [linux] (501 samples, 0.19%)</title><rect x="69.8710%" y="197" width="0.1919%" height="15" fill="rgb(227,97,0)"/><text x="70.1210%" y="207.50"></text></g><g><title>memcpy_erms [linux] (501 samples, 0.19%)</title><rect x="69.8710%" y="181" width="0.1919%" height="15" fill="rgb(234,150,53)"/><text x="70.1210%" y="191.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (501 samples, 0.19%)</title><rect x="69.8710%" y="165" width="0.1919%" height="15" fill="rgb(228,201,54)"/><text x="70.1210%" y="175.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (1,184 samples, 0.45%)</title><rect x="70.3499%" y="197" width="0.4536%" height="15" fill="rgb(222,22,37)"/><text x="70.5999%" y="207.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (276 samples, 0.11%)</title><rect x="70.9138%" y="133" width="0.1057%" height="15" fill="rgb(237,53,32)"/><text x="71.1638%" y="143.50"></text></g><g><title>__list_del_entry_valid [linux] (579 samples, 0.22%)</title><rect x="71.0827%" y="101" width="0.2218%" height="15" fill="rgb(233,25,53)"/><text x="71.3327%" y="111.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (579 samples, 0.22%)</title><rect x="71.0827%" y="85" width="0.2218%" height="15" fill="rgb(210,40,34)"/><text x="71.3327%" y="95.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (438 samples, 0.17%)</title><rect x="71.3194%" y="53" width="0.1678%" height="15" fill="rgb(241,220,44)"/><text x="71.5694%" y="63.50"></text></g><g><title>prep_new_page [linux] (478 samples, 0.18%)</title><rect x="71.3049%" y="101" width="0.1831%" height="15" fill="rgb(235,28,35)"/><text x="71.5549%" y="111.50"></text></g><g><title>kernel_init_free_pages.part.0 [linux] (468 samples, 0.18%)</title><rect x="71.3087%" y="85" width="0.1793%" height="15" fill="rgb(210,56,17)"/><text x="71.5587%" y="95.50"></text></g><g><title>clear_page_erms [linux] (440 samples, 0.17%)</title><rect x="71.3194%" y="69" width="0.1686%" height="15" fill="rgb(224,130,29)"/><text x="71.5694%" y="79.50"></text></g><g><title>get_page_from_freelist [linux] (1,235 samples, 0.47%)</title><rect x="71.0375%" y="117" width="0.4731%" height="15" fill="rgb(235,212,8)"/><text x="71.2875%" y="127.50"></text></g><g><title>__alloc_pages [linux] (1,284 samples, 0.49%)</title><rect x="71.0195%" y="133" width="0.4919%" height="15" fill="rgb(223,33,50)"/><text x="71.2695%" y="143.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 [linux] (419 samples, 0.16%)</title><rect x="71.6221%" y="101" width="0.1605%" height="15" fill="rgb(219,149,13)"/><text x="71.8721%" y="111.50"></text></g><g><title>charge_memcg [linux] (602 samples, 0.23%)</title><rect x="71.5688%" y="117" width="0.2306%" height="15" fill="rgb(250,156,29)"/><text x="71.8188%" y="127.50"></text></g><g><title>__mem_cgroup_charge [linux] (807 samples, 0.31%)</title><rect x="71.5485%" y="133" width="0.3091%" height="15" fill="rgb(216,193,19)"/><text x="71.7985%" y="143.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (749 samples, 0.29%)</title><rect x="71.8772%" y="117" width="0.2869%" height="15" fill="rgb(216,135,14)"/><text x="72.1272%" y="127.50"></text></g><g><title>_raw_spin_lock [linux] (751 samples, 0.29%)</title><rect x="71.8772%" y="133" width="0.2877%" height="15" fill="rgb(241,47,5)"/><text x="72.1272%" y="143.50"></text></g><g><title>__pagevec_lru_add [linux] (319 samples, 0.12%)</title><rect x="72.1825%" y="117" width="0.1222%" height="15" fill="rgb(233,42,35)"/><text x="72.4325%" y="127.50"></text></g><g><title>lru_cache_add [linux] (372 samples, 0.14%)</title><rect x="72.1657%" y="133" width="0.1425%" height="15" fill="rgb(231,13,6)"/><text x="72.4157%" y="143.50"></text></g><g><title>__handle_mm_fault [linux] (3,691 samples, 1.41%)</title><rect x="70.9138%" y="149" width="1.4140%" height="15" fill="rgb(207,181,40)"/><text x="71.1638%" y="159.50"></text></g><g><title>handle_mm_fault [linux] (3,824 samples, 1.46%)</title><rect x="70.8666%" y="165" width="1.4649%" height="15" fill="rgb(254,173,49)"/><text x="71.1166%" y="175.50"></text></g><g><title>do_user_addr_fault [linux] (3,991 samples, 1.53%)</title><rect x="70.8184%" y="181" width="1.5289%" height="15" fill="rgb(221,1,38)"/><text x="71.0684%" y="191.50"></text></g><g><title>exc_page_fault [linux] (4,020 samples, 1.54%)</title><rect x="70.8096%" y="197" width="1.5400%" height="15" fill="rgb(206,124,46)"/><text x="71.0596%" y="207.50"></text></g><g><title>asm_exc_page_fault [linux] (5,239 samples, 2.01%)</title><rect x="70.3499%" y="213" width="2.0070%" height="15" fill="rgb(249,21,11)"/><text x="70.5999%" y="223.50">a..</text></g><g><title>error_entry [linux] (380 samples, 0.15%)</title><rect x="72.3576%" y="213" width="0.1456%" height="15" fill="rgb(222,201,40)"/><text x="72.6076%" y="223.50"></text></g><g><title>sync_regs [linux] (325 samples, 0.12%)</title><rect x="72.3787%" y="197" width="0.1245%" height="15" fill="rgb(235,61,29)"/><text x="72.6287%" y="207.50"></text></g><g><title>memcpy_erms [linux] (295 samples, 0.11%)</title><rect x="72.3902%" y="181" width="0.1130%" height="15" fill="rgb(219,207,3)"/><text x="72.6402%" y="191.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (295 samples, 0.11%)</title><rect x="72.3902%" y="165" width="0.1130%" height="15" fill="rgb(222,56,46)"/><text x="72.6402%" y="175.50"></text></g><g><title>0x00007FA021806D46 [libc.so.6] (6,360 samples, 2.44%)</title><rect x="70.0687%" y="229" width="2.4364%" height="15" fill="rgb(239,76,54)"/><text x="70.3187%" y="239.50">0x..</text></g><g><title>0x00007FA021806D4A [libc.so.6] (275 samples, 0.11%)</title><rect x="72.5051%" y="229" width="0.1053%" height="15" fill="rgb(231,124,27)"/><text x="72.7551%" y="239.50"></text></g><g><title>igraph_set_add [benchmark_igraph_degree_sequence_game] (171,831 samples, 65.83%)</title><rect x="6.7874%" y="277" width="65.8253%" height="15" fill="rgb(249,195,6)"/><text x="7.0374%" y="287.50">igraph_set_add [benchmark_igraph_degree_sequence_game]</text></g><g><title>igraph_set_reserve [benchmark_igraph_degree_sequence_game] (166,287 samples, 63.70%)</title><rect x="8.9112%" y="261" width="63.7015%" height="15" fill="rgb(237,174,47)"/><text x="9.1612%" y="271.50">igraph_set_reserve [benchmark_igraph_degree_sequence_game]</text></g><g><title>realloc [libc.so.6] (106,944 samples, 40.97%)</title><rect x="31.6445%" y="245" width="40.9683%" height="15" fill="rgb(206,201,31)"/><text x="31.8945%" y="255.50">realloc [libc.so.6]</text></g><g><title>igraph_set_contains [benchmark_igraph_degree_sequence_game] (8,310 samples, 3.18%)</title><rect x="72.6127%" y="277" width="3.1834%" height="15" fill="rgb(231,57,52)"/><text x="72.8627%" y="287.50">igr..</text></g><g><title>0x00005595333BE880 [benchmark_igraph_degree_sequence_game] (676 samples, 0.26%)</title><rect x="82.6039%" y="261" width="0.2590%" height="15" fill="rgb(248,177,22)"/><text x="82.8539%" y="271.50"></text></g><g><title>0x00007FA0218048DB [libc.so.6] (7,977 samples, 3.06%)</title><rect x="85.7620%" y="245" width="3.0558%" height="15" fill="rgb(215,211,37)"/><text x="86.0120%" y="255.50">0x0..</text></g><g><title>0x00007FA021804924 [libc.so.6] (587 samples, 0.22%)</title><rect x="89.0565%" y="245" width="0.2249%" height="15" fill="rgb(241,128,51)"/><text x="89.3065%" y="255.50"></text></g><g><title>0x00007FA0218037C9 [libc.so.6] (1,073 samples, 0.41%)</title><rect x="89.5016%" y="229" width="0.4110%" height="15" fill="rgb(227,165,31)"/><text x="89.7516%" y="239.50"></text></g><g><title>0x00007FA0218037CF [libc.so.6] (413 samples, 0.16%)</title><rect x="89.9131%" y="229" width="0.1582%" height="15" fill="rgb(228,167,24)"/><text x="90.1631%" y="239.50"></text></g><g><title>0x00007FA021804938 [libc.so.6] (2,102 samples, 0.81%)</title><rect x="89.3067%" y="245" width="0.8052%" height="15" fill="rgb(228,143,12)"/><text x="89.5567%" y="255.50"></text></g><g><title>0x00007FA02180494A [libc.so.6] (11,604 samples, 4.45%)</title><rect x="90.1897%" y="245" width="4.4453%" height="15" fill="rgb(249,149,8)"/><text x="90.4397%" y="255.50">0x000..</text></g><g><title>0x00007FA0218037C9 [libc.so.6] (3,646 samples, 1.40%)</title><rect x="95.4478%" y="229" width="1.3967%" height="15" fill="rgb(243,35,44)"/><text x="95.6978%" y="239.50"></text></g><g><title>0x00007FA0218037CF [libc.so.6] (2,090 samples, 0.80%)</title><rect x="96.8449%" y="229" width="0.8006%" height="15" fill="rgb(246,89,9)"/><text x="97.0949%" y="239.50"></text></g><g><title>0x00007FA021804DAA [libc.so.6] (6,732 samples, 2.58%)</title><rect x="95.1862%" y="245" width="2.5789%" height="15" fill="rgb(233,213,13)"/><text x="95.4362%" y="255.50">0x..</text></g><g><title>flush_tlb_func [linux] (267 samples, 0.10%)</title><rect x="98.1332%" y="37" width="0.1023%" height="15" fill="rgb(233,141,41)"/><text x="98.3832%" y="47.50"></text></g><g><title>flush_tlb_mm_range [linux] (293 samples, 0.11%)</title><rect x="98.1244%" y="53" width="0.1122%" height="15" fill="rgb(239,167,4)"/><text x="98.3744%" y="63.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (590 samples, 0.23%)</title><rect x="98.2780%" y="37" width="0.2260%" height="15" fill="rgb(209,217,16)"/><text x="98.5280%" y="47.50"></text></g><g><title>free_unref_page_list [linux] (659 samples, 0.25%)</title><rect x="98.7197%" y="37" width="0.2525%" height="15" fill="rgb(219,88,35)"/><text x="98.9697%" y="47.50"></text></g><g><title>release_pages [linux] (1,877 samples, 0.72%)</title><rect x="98.2780%" y="53" width="0.7190%" height="15" fill="rgb(220,193,23)"/><text x="98.5280%" y="63.50"></text></g><g><title>tlb_finish_mmu [linux] (2,376 samples, 0.91%)</title><rect x="98.0995%" y="85" width="0.9102%" height="15" fill="rgb(230,90,52)"/><text x="98.3495%" y="95.50"></text></g><g><title>tlb_flush_mmu [linux] (2,335 samples, 0.89%)</title><rect x="98.1152%" y="69" width="0.8945%" height="15" fill="rgb(252,106,19)"/><text x="98.3652%" y="79.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (1,485 samples, 0.57%)</title><rect x="99.0162%" y="53" width="0.5689%" height="15" fill="rgb(206,74,20)"/><text x="99.2662%" y="63.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (291 samples, 0.11%)</title><rect x="99.6487%" y="37" width="0.1115%" height="15" fill="rgb(230,138,44)"/><text x="99.8987%" y="47.50"></text></g><g><title>page_remove_rmap [linux] (626 samples, 0.24%)</title><rect x="99.6487%" y="53" width="0.2398%" height="15" fill="rgb(235,182,43)"/><text x="99.8987%" y="63.50"></text></g><g><title>unmap_page_range [linux] (2,349 samples, 0.90%)</title><rect x="99.0162%" y="69" width="0.8999%" height="15" fill="rgb(242,16,51)"/><text x="99.2662%" y="79.50"></text></g><g><title>unmap_region [linux] (4,967 samples, 1.90%)</title><rect x="98.0156%" y="101" width="1.9028%" height="15" fill="rgb(248,9,4)"/><text x="98.2656%" y="111.50">u..</text></g><g><title>unmap_vmas [linux] (2,364 samples, 0.91%)</title><rect x="99.0128%" y="85" width="0.9056%" height="15" fill="rgb(210,31,22)"/><text x="99.2628%" y="95.50"></text></g><g><title>__do_munmap [linux] (5,362 samples, 2.05%)</title><rect x="97.8678%" y="117" width="2.0541%" height="15" fill="rgb(239,54,39)"/><text x="98.1178%" y="127.50">_..</text></g><g><title>__x64_sys_brk [linux] (5,385 samples, 2.06%)</title><rect x="97.8651%" y="133" width="2.0629%" height="15" fill="rgb(230,99,41)"/><text x="98.1151%" y="143.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (5,414 samples, 2.07%)</title><rect x="97.8605%" y="165" width="2.0740%" height="15" fill="rgb(253,106,12)"/><text x="98.1105%" y="175.50">e..</text></g><g><title>do_syscall_64 [linux] (5,409 samples, 2.07%)</title><rect x="97.8624%" y="149" width="2.0721%" height="15" fill="rgb(213,46,41)"/><text x="98.1124%" y="159.50">d..</text></g><g><title>0x00007FA0218046E3 [libc.so.6] (5,497 samples, 2.11%)</title><rect x="97.8318%" y="229" width="2.1058%" height="15" fill="rgb(215,133,35)"/><text x="98.0818%" y="239.50">0..</text></g><g><title>__default_morecore [libc.so.6] (5,497 samples, 2.11%)</title><rect x="97.8318%" y="213" width="2.1058%" height="15" fill="rgb(213,28,5)"/><text x="98.0818%" y="223.50">_..</text></g><g><title>sbrk [libc.so.6] (5,490 samples, 2.10%)</title><rect x="97.8344%" y="197" width="2.1031%" height="15" fill="rgb(215,77,49)"/><text x="98.0844%" y="207.50">s..</text></g><g><title>brk [libc.so.6] (5,482 samples, 2.10%)</title><rect x="97.8375%" y="181" width="2.1001%" height="15" fill="rgb(248,100,22)"/><text x="98.0875%" y="191.50">b..</text></g><g><title>0x00007FA021804F48 [libc.so.6] (5,545 samples, 2.12%)</title><rect x="97.8226%" y="245" width="2.1242%" height="15" fill="rgb(208,67,9)"/><text x="98.0726%" y="255.50">0..</text></g><g><title>igraph_set_destroy [benchmark_igraph_degree_sequence_game] (63,059 samples, 24.16%)</title><rect x="75.7961%" y="277" width="24.1567%" height="15" fill="rgb(219,133,21)"/><text x="76.0461%" y="287.50">igraph_set_destroy [benchmark_igraph_d..</text></g><g><title>free [libc.so.6] (44,577 samples, 17.08%)</title><rect x="82.8763%" y="261" width="17.0766%" height="15" fill="rgb(246,46,29)"/><text x="83.1263%" y="271.50">free [libc.so.6]</text></g><g><title>igraph_degree_sequence_game [benchmark_igraph_degree_sequence_game] (254,980 samples, 97.68%)</title><rect x="2.3062%" y="293" width="97.6781%" height="15" fill="rgb(246,185,52)"/><text x="2.5562%" y="303.50">igraph_degree_sequence_game [benchmark_igraph_degree_sequence_game]</text></g><g><title>_start [benchmark_igraph_degree_sequence_game] (254,998 samples, 97.69%)</title><rect x="2.3050%" y="357" width="97.6850%" height="15" fill="rgb(252,136,11)"/><text x="2.5550%" y="367.50">_start [benchmark_igraph_degree_sequence_game]</text></g><g><title>__libc_start_main [libc.so.6] (254,998 samples, 97.69%)</title><rect x="2.3050%" y="341" width="97.6850%" height="15" fill="rgb(219,138,53)"/><text x="2.5550%" y="351.50">__libc_start_main [libc.so.6]</text></g><g><title>0x00007FA02178BD8F [libc.so.6] (254,998 samples, 97.69%)</title><rect x="2.3050%" y="325" width="97.6850%" height="15" fill="rgb(211,51,23)"/><text x="2.5550%" y="335.50">0x00007FA02178BD8F [libc.so.6]</text></g><g><title>main [benchmark_igraph_degree_sequence_game] (254,998 samples, 97.69%)</title><rect x="2.3050%" y="309" width="97.6850%" height="15" fill="rgb(247,221,28)"/><text x="2.5550%" y="319.50">main [benchmark_igraph_degree_sequence_game]</text></g><g><title>all (261,041 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(251,222,45)"/><text x="0.2500%" y="415.50"></text></g><g><title>benchmark_igraph_degree_sequence_game [PID=50225] (261,041 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(217,162,53)"/><text x="0.2500%" y="399.50">benchmark_igraph_degree_sequence_game [PID=50225]</text></g><g><title>[MAIN_THREAD] (261,041 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(229,93,14)"/><text x="0.2500%" y="383.50">[MAIN_THREAD]</text></g></svg></svg>