# Community structure

# Test suite for the IGraph library.
# Copyright (C) 2005-2012  Gabor Csardi <csardi.gabor@gmail.com>
# 334 Harvard street, Cambridge, MA 02139 USA
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA 
# 02110-1301 USA

AT_BANNER([[Community structure]])

AT_SETUP([Modularity (igraph_modularity): ])
AT_KEYWORDS([modularity community clustering])
AT_COMPILE_CHECK([tests/igraph_modularity.c], [tests/igraph_modularity.out])
AT_CLEANUP

AT_SETUP([Spinglass clustering (igraph_spinglass_community): ])
AT_KEYWORDS([spin glass spinglass community clustering])
AT_COMPILE_CHECK([simple/spinglass.c])
AT_CLEANUP

AT_SETUP([Walktrap community structure (igraph_walktrap_community): ])
AT_KEYWORDS([random walk community structure clustering walktrap])
AT_COMPILE_CHECK([simple/walktrap.c], [simple/walktrap.out])
AT_CLEANUP

AT_SETUP([Edge betweenness community structure (igraph_community_edge_betweenness): ])
AT_KEYWORDS([community structure edge betweenness Newman Girvan])
AT_COMPILE_CHECK([simple/igraph_community_edge_betweenness.c],
		 [simple/igraph_community_edge_betweenness.out])
AT_CLEANUP

AT_SETUP([Modularity optimization (igraph_community_fastgreedy): ])
AT_KEYWORDS([community structure Clauset Newman Moore modularity greedy])
AT_COMPILE_CHECK([simple/igraph_community_fastgreedy.c],
                 [simple/igraph_community_fastgreedy.out])
AT_CLEANUP

AT_SETUP([Leading eigenvector community structure (igraph_community_leading_eigenvector) :])
AT_KEYWORDS([community structure leading eigenvector Newman])
AT_COMPILE_CHECK([simple/igraph_community_leading_eigenvector.c],
                 [simple/igraph_community_leading_eigenvector.out])
AT_CLEANUP

AT_SETUP([Weighted leading eigenvector community structure (igraph_community_leading_eigenvector) :])
AT_KEYWORDS([community structure leading eigenvector Newman weighted])
AT_COMPILE_CHECK([simple/igraph_community_leading_eigenvector2.c],
                 [simple/igraph_community_leading_eigenvector2.out])
AT_CLEANUP

AT_SETUP([Leading eigenvector bug 1002140 test (igraph_community_leading_eigenvector) :])
AT_KEYWORDS([community structure leading eigenvector Newman])
AT_COMPILE_CHECK([simple/levc-stress.c], [], [simple/input.dl])
AT_CLEANUP

AT_SETUP([Fluid communities algorithm (igraph_community_fluid_communities) :])
AT_KEYWORDS([community structure fluidc fluid communities Pares Garcia-Gasulla])
AT_COMPILE_CHECK([tests/igraph_community_fluid_communities.c],
                 [tests/igraph_community_fluid_communities.out])
AT_CLEANUP

AT_SETUP([Label propagation algorithm (igraph_community_label_propagation) :])
AT_KEYWORDS([community structure label propagation Raghavan Albert Kumara])
AT_COMPILE_CHECK([tests/igraph_community_label_propagation.c],
                 [tests/igraph_community_label_propagation.out])
AT_CLEANUP

AT_SETUP([Multilevel community detection (igraph_community_multilevel) :])
AT_KEYWORDS([community structure multilevel Blondel Guillaume Lambiotte Lefebvre])
AT_COMPILE_CHECK([simple/igraph_community_multilevel.c],
                 [simple/igraph_community_multilevel.out])
AT_CLEANUP

AT_SETUP([Multilevel community detection, isolates (igraph_community_multilevel) :])
AT_KEYWORDS([community structure multilevel Blondel Guillaume Lambiotte Lefebvre])
AT_COMPILE_CHECK([simple/bug-1149658.c])
AT_CLEANUP

AT_SETUP([Leiden community detection (igraph_community_leiden) :])
AT_KEYWORDS([community structure using Leiden algorithm])
AT_COMPILE_CHECK([tests/igraph_community_leiden.c],
                 [tests/igraph_community_leiden.out])
AT_CLEANUP

AT_SETUP([Modularity optimization, integer programming (igraph_community_optimal_modularity) :])
AT_KEYWORDS([community structure optimal modularity integer programming])
AT_COMPILE_CHECK([simple/igraph_community_optimal_modularity.c])
AT_CLEANUP

AT_SETUP([Infomap community structure (igraph_community_infomap) :])
AT_KEYWORDS([community structure infomap Rosvall Bergstrom])
AT_COMPILE_CHECK([simple/igraph_community_infomap.c],
                 [simple/igraph_community_infomap.out],
                 [simple/wikti_en_V_syn.elist])
AT_CLEANUP
